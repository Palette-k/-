{"ast":null,"code":"import { defineComponent, computed, provide, h } from 'vue';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { buildProps } from '../../../utils/vue/props.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nconst rowProps = buildProps({\n  tag: {\n    type: String,\n    default: \"div\"\n  },\n  gutter: {\n    type: Number,\n    default: 0\n  },\n  justify: {\n    type: String,\n    values: [\"start\", \"center\", \"end\", \"space-around\", \"space-between\", \"space-evenly\"],\n    default: \"start\"\n  },\n  align: {\n    type: String,\n    values: [\"top\", \"middle\", \"bottom\"],\n    default: \"top\"\n  }\n});\nconst Row = defineComponent({\n  name: \"ElRow\",\n  props: rowProps,\n\n  setup(props, {\n    slots\n  }) {\n    const ns = useNamespace(\"row\");\n    const gutter = computed(() => props.gutter);\n    provide(\"ElRow\", {\n      gutter\n    });\n    const style = computed(() => {\n      const styles = {\n        marginLeft: \"\",\n        marginRight: \"\"\n      };\n\n      if (props.gutter) {\n        styles.marginLeft = `-${props.gutter / 2}px`;\n        styles.marginRight = styles.marginLeft;\n      }\n\n      return styles;\n    });\n    return () => {\n      var _a;\n\n      return h(props.tag, {\n        class: [ns.b(), ns.is(`justify-${props.justify}`, props.justify !== \"start\"), ns.is(`align-${props.align}`, props.align !== \"top\")],\n        style: style.value\n      }, (_a = slots.default) == null ? void 0 : _a.call(slots));\n    };\n  }\n\n});\nexport { Row as default, rowProps };","map":null,"metadata":{},"sourceType":"module"}