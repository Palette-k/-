{"ast":null,"code":"import { defineComponent, inject, ref, computed, watch, resolveComponent, openBlock, createElementBlock, normalizeClass, Fragment, renderList, normalizeStyle, createVNode, withCtx, createBlock, resolveDynamicComponent, createCommentVNode, toDisplayString } from 'vue';\nimport { isObject, isArray } from '@vue/shared';\nimport '../../../tokens/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { StarFilled, Star } from '@element-plus/icons-vue';\nimport '../../../hooks/index.mjs';\nimport { rateProps, rateEmits } from './rate.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { elFormKey } from '../../../tokens/form.mjs';\nimport { useSize } from '../../../hooks/use-common-props/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nimport { hasClass } from '../../../utils/dom/style.mjs';\n\nfunction getValueFromMap(value, map) {\n  const isExcludedObject = val => isObject(val);\n\n  const matchedKeys = Object.keys(map).map(key => +key).filter(key => {\n    const val = map[key];\n    const excluded = isExcludedObject(val) ? val.excluded : false;\n    return excluded ? value < key : value <= key;\n  }).sort((a, b) => a - b);\n  const matchedValue = map[matchedKeys[0]];\n  return isExcludedObject(matchedValue) && matchedValue.value || matchedValue;\n}\n\nconst _sfc_main = defineComponent({\n  name: \"ElRate\",\n  components: {\n    ElIcon,\n    StarFilled,\n    Star\n  },\n  props: rateProps,\n  emits: rateEmits,\n\n  setup(props, {\n    emit\n  }) {\n    const elForm = inject(elFormKey, {});\n    const rateSize = useSize();\n    const ns = useNamespace(\"rate\");\n    const currentValue = ref(props.modelValue);\n    const hoverIndex = ref(-1);\n    const pointerAtLeftHalf = ref(true);\n    const rateKls = computed(() => [ns.b(), ns.m(rateSize.value)]);\n    const rateDisabled = computed(() => props.disabled || elForm.disabled);\n    const text = computed(() => {\n      let result = \"\";\n\n      if (props.showScore) {\n        result = props.scoreTemplate.replace(/\\{\\s*value\\s*\\}/, rateDisabled.value ? `${props.modelValue}` : `${currentValue.value}`);\n      } else if (props.showText) {\n        result = props.texts[Math.ceil(currentValue.value) - 1];\n      }\n\n      return result;\n    });\n    const valueDecimal = computed(() => props.modelValue * 100 - Math.floor(props.modelValue) * 100);\n    const colorMap = computed(() => isArray(props.colors) ? {\n      [props.lowThreshold]: props.colors[0],\n      [props.highThreshold]: {\n        value: props.colors[1],\n        excluded: true\n      },\n      [props.max]: props.colors[2]\n    } : props.colors);\n    const activeColor = computed(() => getValueFromMap(currentValue.value, colorMap.value));\n    const decimalStyle = computed(() => {\n      let width = \"\";\n\n      if (rateDisabled.value) {\n        width = `${valueDecimal.value}%`;\n      } else if (props.allowHalf) {\n        width = \"50%\";\n      }\n\n      return {\n        color: activeColor.value,\n        width\n      };\n    });\n    const componentMap = computed(() => isArray(props.icons) ? {\n      [props.lowThreshold]: props.icons[0],\n      [props.highThreshold]: {\n        value: props.icons[1],\n        excluded: true\n      },\n      [props.max]: props.icons[2]\n    } : props.icons);\n    const decimalIconComponent = computed(() => getValueFromMap(props.modelValue, componentMap.value));\n    const voidComponent = computed(() => rateDisabled.value ? props.disabledvoidIcon : props.voidIcon);\n    const activeComponent = computed(() => getValueFromMap(currentValue.value, componentMap.value));\n    const iconComponents = computed(() => {\n      const result = Array(props.max);\n      const threshold = currentValue.value;\n      result.fill(activeComponent.value, 0, threshold);\n      result.fill(voidComponent.value, threshold, props.max);\n      return result;\n    });\n\n    function showDecimalIcon(item) {\n      const showWhenDisabled = rateDisabled.value && valueDecimal.value > 0 && item - 1 < props.modelValue && item > props.modelValue;\n      const showWhenAllowHalf = props.allowHalf && pointerAtLeftHalf.value && item - 0.5 <= currentValue.value && item > currentValue.value;\n      return showWhenDisabled || showWhenAllowHalf;\n    }\n\n    function getIconStyle(item) {\n      const voidColor = rateDisabled.value ? props.disabledVoidColor : props.voidColor;\n      return {\n        color: item <= currentValue.value ? activeColor.value : voidColor\n      };\n    }\n\n    function selectValue(value) {\n      if (rateDisabled.value) {\n        return;\n      }\n\n      if (props.allowHalf && pointerAtLeftHalf.value) {\n        emit(UPDATE_MODEL_EVENT, currentValue.value);\n\n        if (props.modelValue !== currentValue.value) {\n          emit(\"change\", currentValue.value);\n        }\n      } else {\n        emit(UPDATE_MODEL_EVENT, value);\n\n        if (props.modelValue !== value) {\n          emit(\"change\", value);\n        }\n      }\n    }\n\n    function handleKey(e) {\n      if (rateDisabled.value) {\n        return;\n      }\n\n      let _currentValue = currentValue.value;\n      const code = e.code;\n\n      if (code === EVENT_CODE.up || code === EVENT_CODE.right) {\n        if (props.allowHalf) {\n          _currentValue += 0.5;\n        } else {\n          _currentValue += 1;\n        }\n\n        e.stopPropagation();\n        e.preventDefault();\n      } else if (code === EVENT_CODE.left || code === EVENT_CODE.down) {\n        if (props.allowHalf) {\n          _currentValue -= 0.5;\n        } else {\n          _currentValue -= 1;\n        }\n\n        e.stopPropagation();\n        e.preventDefault();\n      }\n\n      _currentValue = _currentValue < 0 ? 0 : _currentValue;\n      _currentValue = _currentValue > props.max ? props.max : _currentValue;\n      emit(UPDATE_MODEL_EVENT, _currentValue);\n      emit(\"change\", _currentValue);\n      return _currentValue;\n    }\n\n    function setCurrentValue(value, event) {\n      if (rateDisabled.value) {\n        return;\n      }\n\n      if (props.allowHalf) {\n        let target = event.target;\n\n        if (hasClass(target, ns.e(\"item\"))) {\n          target = target.querySelector(`.${ns.e(\"icon\")}`);\n        }\n\n        if (target.clientWidth === 0 || hasClass(target, ns.e(\"decimal\"))) {\n          target = target.parentNode;\n        }\n\n        pointerAtLeftHalf.value = event.offsetX * 2 <= target.clientWidth;\n        currentValue.value = pointerAtLeftHalf.value ? value - 0.5 : value;\n      } else {\n        currentValue.value = value;\n      }\n\n      hoverIndex.value = value;\n    }\n\n    function resetCurrentValue() {\n      if (rateDisabled.value) {\n        return;\n      }\n\n      if (props.allowHalf) {\n        pointerAtLeftHalf.value = props.modelValue !== Math.floor(props.modelValue);\n      }\n\n      currentValue.value = props.modelValue;\n      hoverIndex.value = -1;\n    }\n\n    watch(() => props.modelValue, val => {\n      currentValue.value = val;\n      pointerAtLeftHalf.value = props.modelValue !== Math.floor(props.modelValue);\n    });\n\n    if (!props.modelValue) {\n      emit(UPDATE_MODEL_EVENT, 0);\n    }\n\n    return {\n      ns,\n      hoverIndex,\n      currentValue,\n      rateDisabled,\n      text,\n      decimalStyle,\n      decimalIconComponent,\n      iconComponents,\n      rateKls,\n      showDecimalIcon,\n      getIconStyle,\n      selectValue,\n      handleKey,\n      setCurrentValue,\n      resetCurrentValue\n    };\n  }\n\n});\n\nconst _hoisted_1 = [\"aria-valuenow\", \"aria-valuetext\", \"aria-valuemax\"];\nconst _hoisted_2 = [\"onMousemove\", \"onClick\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_icon = resolveComponent(\"el-icon\");\n\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass(_ctx.rateKls),\n    role: \"slider\",\n    \"aria-valuenow\": _ctx.currentValue,\n    \"aria-valuetext\": _ctx.text,\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": _ctx.max,\n    tabindex: \"0\",\n    onKeydown: _cache[1] || (_cache[1] = (...args) => _ctx.handleKey && _ctx.handleKey(...args))\n  }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.max, (item, key) => {\n    return openBlock(), createElementBlock(\"span\", {\n      key,\n      class: normalizeClass(_ctx.ns.e(\"item\")),\n      style: normalizeStyle({\n        cursor: _ctx.rateDisabled ? \"auto\" : \"pointer\"\n      }),\n      onMousemove: $event => _ctx.setCurrentValue(item, $event),\n      onMouseleave: _cache[0] || (_cache[0] = (...args) => _ctx.resetCurrentValue && _ctx.resetCurrentValue(...args)),\n      onClick: $event => _ctx.selectValue(item)\n    }, [createVNode(_component_el_icon, {\n      class: normalizeClass([_ctx.ns.e(\"icon\"), {\n        hover: _ctx.hoverIndex === item\n      }]),\n      style: normalizeStyle(_ctx.getIconStyle(item))\n    }, {\n      default: withCtx(() => [!_ctx.showDecimalIcon(item) ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.iconComponents[item - 1]), {\n        key: 0\n      })) : createCommentVNode(\"v-if\", true), _ctx.showDecimalIcon(item) ? (openBlock(), createBlock(_component_el_icon, {\n        key: 1,\n        style: normalizeStyle(_ctx.decimalStyle),\n        class: normalizeClass([_ctx.ns.e(\"icon\"), _ctx.ns.e(\"decimal\")])\n      }, {\n        default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.decimalIconComponent)))]),\n        _: 1\n      }, 8, [\"style\", \"class\"])) : createCommentVNode(\"v-if\", true)]),\n      _: 2\n    }, 1032, [\"class\", \"style\"])], 46, _hoisted_2);\n  }), 128)), _ctx.showText || _ctx.showScore ? (openBlock(), createElementBlock(\"span\", {\n    key: 0,\n    class: normalizeClass(_ctx.ns.e(\"text\")),\n    style: normalizeStyle({\n      color: _ctx.textColor\n    })\n  }, toDisplayString(_ctx.text), 7)) : createCommentVNode(\"v-if\", true)], 42, _hoisted_1);\n}\n\nvar Rate = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { Rate as default };","map":null,"metadata":{},"sourceType":"module"}