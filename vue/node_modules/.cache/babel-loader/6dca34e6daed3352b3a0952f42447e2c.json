{"ast":null,"code":"import { computed } from 'vue';\n\nconst useComputedData = props => {\n  const propsKey = computed(() => props.props.key);\n  const dataObj = computed(() => {\n    return props.data.reduce((o, cur) => (o[cur[propsKey.value]] = cur) && o, {});\n  });\n  const sourceData = computed(() => {\n    return props.data.filter(item => !props.modelValue.includes(item[propsKey.value]));\n  });\n  const targetData = computed(() => {\n    if (props.targetOrder === \"original\") {\n      return props.data.filter(item => props.modelValue.includes(item[propsKey.value]));\n    } else {\n      return props.modelValue.reduce((arr, cur) => {\n        const val = dataObj.value[cur];\n\n        if (val) {\n          arr.push(val);\n        }\n\n        return arr;\n      }, []);\n    }\n  });\n  return {\n    propsKey,\n    sourceData,\n    targetData\n  };\n};\n\nexport { useComputedData };","map":null,"metadata":{},"sourceType":"module"}