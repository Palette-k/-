{"ast":null,"code":"import { defineComponent, computed, resolveComponent, openBlock, createElementBlock, toDisplayString, createBlock, withCtx, createVNode } from 'vue';\nimport { ElIcon } from '../../../icon/index.mjs';\nimport { ArrowRight } from '@element-plus/icons-vue';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nconst paginationNextProps = {\n  disabled: Boolean,\n  currentPage: {\n    type: Number,\n    default: 1\n  },\n  pageCount: {\n    type: Number,\n    default: 50\n  },\n  nextText: {\n    type: String,\n    default: \"\"\n  }\n};\n\nconst _sfc_main = defineComponent({\n  name: \"ElPaginationNext\",\n  components: {\n    ElIcon,\n    ArrowRight\n  },\n  props: paginationNextProps,\n  emits: [\"click\"],\n\n  setup(props) {\n    const internalDisabled = computed(() => props.disabled || props.currentPage === props.pageCount || props.pageCount === 0);\n    return {\n      internalDisabled\n    };\n  }\n\n});\n\nconst _hoisted_1 = [\"disabled\", \"aria-disabled\"];\nconst _hoisted_2 = {\n  key: 0\n};\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_arrow_right = resolveComponent(\"arrow-right\");\n\n  const _component_el_icon = resolveComponent(\"el-icon\");\n\n  return openBlock(), createElementBlock(\"button\", {\n    type: \"button\",\n    class: \"btn-next\",\n    disabled: _ctx.internalDisabled,\n    \"aria-disabled\": _ctx.internalDisabled,\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit(\"click\", $event))\n  }, [_ctx.nextText ? (openBlock(), createElementBlock(\"span\", _hoisted_2, toDisplayString(_ctx.nextText), 1)) : (openBlock(), createBlock(_component_el_icon, {\n    key: 1\n  }, {\n    default: withCtx(() => [createVNode(_component_arrow_right)]),\n    _: 1\n  }))], 8, _hoisted_1);\n}\n\nvar Next = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { Next as default };","map":null,"metadata":{},"sourceType":"module"}