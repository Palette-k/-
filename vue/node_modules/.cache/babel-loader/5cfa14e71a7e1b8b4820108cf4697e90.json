{"ast":null,"code":"import { defineComponent, watch, renderSlot } from 'vue';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props.mjs';\nimport { provideGlobalConfig } from '../../../hooks/use-global-config/index.mjs';\nconst messageConfig = {};\nconst configProviderProps = buildProps({\n  locale: {\n    type: definePropType(Object)\n  },\n  size: {\n    type: String,\n    values: [\"large\", \"default\", \"small\"]\n  },\n  button: {\n    type: definePropType(Object)\n  },\n  message: {\n    type: definePropType(Object)\n  },\n  zIndex: {\n    type: Number\n  },\n  namespace: {\n    type: String,\n    default: \"el\"\n  }\n});\nvar ConfigProvider = defineComponent({\n  name: \"ElConfigProvider\",\n  props: configProviderProps,\n\n  setup(props, {\n    slots\n  }) {\n    watch(() => props.message, val => {\n      Object.assign(messageConfig, val != null ? val : {});\n    }, {\n      immediate: true,\n      deep: true\n    });\n    const config = provideGlobalConfig(props);\n    return () => renderSlot(slots, \"default\", {\n      config: config == null ? void 0 : config.value\n    });\n  }\n\n});\nexport { configProviderProps, ConfigProvider as default, messageConfig };","map":null,"metadata":{},"sourceType":"module"}