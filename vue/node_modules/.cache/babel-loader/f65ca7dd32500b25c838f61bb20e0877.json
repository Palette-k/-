{"ast":null,"code":"import { hasOwn } from '@vue/shared';\nexport { hasOwn } from '@vue/shared';\nimport { throwError } from './error.mjs';\nconst SCOPE = \"UtilV2/objects\";\n\nconst keysOf = arr => Object.keys(arr);\n\nconst entriesOf = arr => Object.entries(arr);\n\nfunction getPropByPath(obj, path, strict) {\n  let tempObj = obj;\n  let key, value;\n\n  if (obj && hasOwn(obj, path)) {\n    key = path;\n    value = tempObj == null ? void 0 : tempObj[path];\n  } else {\n    path = path.replace(/\\[(\\w+)\\]/g, \".$1\");\n    path = path.replace(/^\\./, \"\");\n    const keyArr = path.split(\".\");\n    let i = 0;\n\n    for (i; i < keyArr.length - 1; i++) {\n      if (!tempObj && !strict) break;\n      const key2 = keyArr[i];\n\n      if (key2 in tempObj) {\n        tempObj = tempObj[key2];\n      } else {\n        if (strict) {\n          throwError(SCOPE, \"Please transfer a valid prop path to form item!\");\n        }\n\n        break;\n      }\n    }\n\n    key = keyArr[i];\n    value = tempObj == null ? void 0 : tempObj[keyArr[i]];\n  }\n\n  return {\n    o: tempObj,\n    k: key,\n    v: value\n  };\n}\n\nexport { entriesOf, getPropByPath, keysOf };","map":null,"metadata":{},"sourceType":"module"}