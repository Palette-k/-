{"ast":null,"code":"import { NOOP } from '@vue/shared';\n\nconst withInstall = (main, extra) => {\n  ;\n\n  main.install = app => {\n    for (const comp of [main, ...Object.values(extra != null ? extra : {})]) {\n      app.component(comp.name, comp);\n    }\n  };\n\n  if (extra) {\n    for (const [key, comp] of Object.entries(extra)) {\n      ;\n      main[key] = comp;\n    }\n  }\n\n  return main;\n};\n\nconst withInstallFunction = (fn, name) => {\n  ;\n\n  fn.install = app => {\n    ;\n    fn._context = app._context;\n    app.config.globalProperties[name] = fn;\n  };\n\n  return fn;\n};\n\nconst withNoopInstall = component => {\n  ;\n  component.install = NOOP;\n  return component;\n};\n\nexport { withInstall, withInstallFunction, withNoopInstall };","map":null,"metadata":{},"sourceType":"module"}