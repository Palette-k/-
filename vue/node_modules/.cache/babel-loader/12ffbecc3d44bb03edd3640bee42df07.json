{"ast":null,"code":"import { defineComponent, ref, provide, h } from 'vue';\nimport dayjs from 'dayjs';\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\nimport { DEFAULT_FORMATS_TIME } from './common/constant.mjs';\nimport CommonPicker from './common/picker.mjs';\nimport TimePickPanel from './time-picker-com/panel-time-pick.mjs';\nimport TimeRangePanel from './time-picker-com/panel-time-range.mjs';\nimport { timePickerDefaultProps } from './common/props.mjs';\ndayjs.extend(customParseFormat);\nvar TimePicker = defineComponent({\n  name: \"ElTimePicker\",\n  install: null,\n  props: { ...timePickerDefaultProps,\n    isRange: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: [\"update:modelValue\"],\n\n  setup(props, ctx) {\n    const commonPicker = ref(null);\n    const type = props.isRange ? \"timerange\" : \"time\";\n    const panel = props.isRange ? TimeRangePanel : TimePickPanel;\n    const refProps = { ...props,\n      focus: () => {\n        var _a;\n\n        (_a = commonPicker.value) == null ? void 0 : _a.handleFocus();\n      },\n      blur: () => {\n        var _a;\n\n        (_a = commonPicker.value) == null ? void 0 : _a.handleBlur();\n      }\n    };\n    provide(\"ElPopperOptions\", props.popperOptions);\n    ctx.expose(refProps);\n    return () => {\n      var _a;\n\n      const format = (_a = props.format) != null ? _a : DEFAULT_FORMATS_TIME;\n      return h(CommonPicker, { ...props,\n        format,\n        type,\n        ref: commonPicker,\n        \"onUpdate:modelValue\": value => ctx.emit(\"update:modelValue\", value)\n      }, {\n        default: scopedProps => h(panel, scopedProps)\n      });\n    };\n  }\n\n});\nexport { TimePicker as default };","map":null,"metadata":{},"sourceType":"module"}