{"ast":null,"code":"import { defineComponent, resolveComponent, openBlock, createElementBlock, normalizeClass, createBlock, withCtx, resolveDynamicComponent, createCommentVNode, renderSlot } from 'vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { linkProps, linkEmits } from './link.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nconst _sfc_main = defineComponent({\n  name: \"ElLink\",\n  components: {\n    ElIcon\n  },\n  props: linkProps,\n  emits: linkEmits,\n\n  setup(props, {\n    emit\n  }) {\n    const ns = useNamespace(\"link\");\n\n    function handleClick(event) {\n      if (!props.disabled) emit(\"click\", event);\n    }\n\n    return {\n      ns,\n      handleClick\n    };\n  }\n\n});\n\nconst _hoisted_1 = [\"href\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_icon = resolveComponent(\"el-icon\");\n\n  return openBlock(), createElementBlock(\"a\", {\n    class: normalizeClass([_ctx.ns.b(), _ctx.type ? _ctx.ns.m(_ctx.type) : \"\", _ctx.ns.is(\"disabled\", _ctx.disabled), _ctx.ns.is(\"underline\", _ctx.underline && !_ctx.disabled)]),\n    href: _ctx.disabled || !_ctx.href ? void 0 : _ctx.href,\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.handleClick && _ctx.handleClick(...args))\n  }, [_ctx.icon ? (openBlock(), createBlock(_component_el_icon, {\n    key: 0\n  }, {\n    default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.icon)))]),\n    _: 1\n  })) : createCommentVNode(\"v-if\", true), _ctx.$slots.default ? (openBlock(), createElementBlock(\"span\", {\n    key: 1,\n    class: normalizeClass(_ctx.ns.m(\"inner\"))\n  }, [renderSlot(_ctx.$slots, \"default\")], 2)) : createCommentVNode(\"v-if\", true), _ctx.$slots.icon ? renderSlot(_ctx.$slots, \"icon\", {\n    key: 2\n  }) : createCommentVNode(\"v-if\", true)], 10, _hoisted_1);\n}\n\nvar Link = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { Link as default };","map":null,"metadata":{},"sourceType":"module"}