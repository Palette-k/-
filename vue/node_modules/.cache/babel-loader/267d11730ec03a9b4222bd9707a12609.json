{"ast":null,"code":"import { defineComponent, openBlock, createBlock, Transition, mergeProps, toHandlers, withCtx, renderSlot } from 'vue';\nimport '../../../hooks/index.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nconst _sfc_main = defineComponent({\n  name: \"ElCollapseTransition\",\n\n  setup() {\n    const ns = useNamespace(\"collapse-transition\");\n    return {\n      ns,\n      on: {\n        beforeEnter(el) {\n          if (!el.dataset) el.dataset = {};\n          el.dataset.oldPaddingTop = el.style.paddingTop;\n          el.dataset.oldPaddingBottom = el.style.paddingBottom;\n          el.style.maxHeight = 0;\n          el.style.paddingTop = 0;\n          el.style.paddingBottom = 0;\n        },\n\n        enter(el) {\n          el.dataset.oldOverflow = el.style.overflow;\n\n          if (el.scrollHeight !== 0) {\n            el.style.maxHeight = `${el.scrollHeight}px`;\n            el.style.paddingTop = el.dataset.oldPaddingTop;\n            el.style.paddingBottom = el.dataset.oldPaddingBottom;\n          } else {\n            el.style.maxHeight = 0;\n            el.style.paddingTop = el.dataset.oldPaddingTop;\n            el.style.paddingBottom = el.dataset.oldPaddingBottom;\n          }\n\n          el.style.overflow = \"hidden\";\n        },\n\n        afterEnter(el) {\n          el.style.maxHeight = \"\";\n          el.style.overflow = el.dataset.oldOverflow;\n        },\n\n        beforeLeave(el) {\n          if (!el.dataset) el.dataset = {};\n          el.dataset.oldPaddingTop = el.style.paddingTop;\n          el.dataset.oldPaddingBottom = el.style.paddingBottom;\n          el.dataset.oldOverflow = el.style.overflow;\n          el.style.maxHeight = `${el.scrollHeight}px`;\n          el.style.overflow = \"hidden\";\n        },\n\n        leave(el) {\n          if (el.scrollHeight !== 0) {\n            el.style.maxHeight = 0;\n            el.style.paddingTop = 0;\n            el.style.paddingBottom = 0;\n          }\n        },\n\n        afterLeave(el) {\n          el.style.maxHeight = \"\";\n          el.style.overflow = el.dataset.oldOverflow;\n          el.style.paddingTop = el.dataset.oldPaddingTop;\n          el.style.paddingBottom = el.dataset.oldPaddingBottom;\n        }\n\n      }\n    };\n  }\n\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createBlock(Transition, mergeProps({\n    name: _ctx.ns.b()\n  }, toHandlers(_ctx.on)), {\n    default: withCtx(() => [renderSlot(_ctx.$slots, \"default\")]),\n    _: 3\n  }, 16, [\"name\"]);\n}\n\nvar CollapseTransition = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { CollapseTransition as default };","map":null,"metadata":{},"sourceType":"module"}