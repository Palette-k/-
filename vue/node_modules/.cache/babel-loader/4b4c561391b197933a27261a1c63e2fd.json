{"ast":null,"code":"import { placements } from '@popperjs/core';\nimport '../../../utils/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props.mjs';\nconst effects = [\"light\", \"dark\"];\nconst triggers = [\"click\", \"contextmenu\", \"hover\", \"focus\"];\nconst Effect = {\n  LIGHT: \"light\",\n  DARK: \"dark\"\n};\nconst usePopperArrowProps = buildProps({\n  arrowOffset: {\n    type: Number,\n    default: 5\n  }\n});\nconst usePopperCoreConfigProps = buildProps({\n  boundariesPadding: {\n    type: Number,\n    default: 0\n  },\n  fallbackPlacements: {\n    type: definePropType(Array),\n    default: () => []\n  },\n  gpuAcceleration: {\n    type: Boolean,\n    default: true\n  },\n  offset: {\n    type: Number,\n    default: 12\n  },\n  placement: {\n    type: String,\n    values: placements,\n    default: \"bottom\"\n  },\n  popperOptions: {\n    type: definePropType(Object),\n    default: () => ({})\n  },\n  strategy: {\n    type: String,\n    values: [\"fixed\", \"absolute\"],\n    default: \"absolute\"\n  }\n});\nconst usePopperProps = buildProps({\n  autoClose: {\n    type: Number,\n    default: 0\n  },\n  cutoff: {\n    type: Boolean,\n    default: false\n  },\n  disabled: {\n    type: Boolean,\n    default: false\n  }\n});\nconst usePopperContentProps = buildProps({ ...usePopperCoreConfigProps,\n  style: {\n    type: definePropType([String, Array, Object])\n  },\n  className: {\n    type: definePropType([String, Array, Object])\n  },\n  effect: {\n    type: String,\n    default: \"dark\"\n  },\n  visible: {\n    type: Boolean\n  },\n  enterable: {\n    type: Boolean,\n    default: true\n  },\n  pure: {\n    type: Boolean\n  },\n  popperClass: {\n    type: definePropType([String, Array, Object])\n  },\n  popperStyle: {\n    type: definePropType([String, Array, Object])\n  },\n  referenceEl: {\n    type: definePropType(Object)\n  },\n  stopPopperMouseEvent: {\n    type: Boolean,\n    default: true\n  },\n  zIndex: Number\n});\nconst usePopperTriggerProps = buildProps({\n  virtualRef: {\n    type: definePropType(Object)\n  },\n  virtualTriggering: {\n    type: Boolean\n  }\n});\nexport { Effect, usePopperArrowProps, usePopperContentProps, usePopperCoreConfigProps, usePopperProps, usePopperTriggerProps };","map":null,"metadata":{},"sourceType":"module"}