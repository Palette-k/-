{"ast":null,"code":"import { defineComponent, ref, openBlock, createBlock, TransitionGroup, normalizeClass, unref, withCtx, createElementBlock, Fragment, renderList, withKeys, renderSlot, createCommentVNode, createElementVNode, createVNode, createTextVNode, toDisplayString } from 'vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { Document, CircleCheck, Check, Close, ZoomIn, Delete } from '@element-plus/icons-vue';\nimport '../../../hooks/index.mjs';\nimport { ElProgress } from '../../progress/index.mjs';\nimport { uploadListProps, uploadListEmits } from './upload-list.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nconst _hoisted_1 = [\"onKeydown\"];\nconst _hoisted_2 = [\"src\"];\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = [\"onClick\"];\nconst __default__ = {\n  name: \"ElUploadList\"\n};\n\nconst _sfc_main = /* @__PURE__ */defineComponent({ ...__default__,\n  props: uploadListProps,\n  emits: uploadListEmits,\n\n  setup(__props, {\n    emit\n  }) {\n    const props = __props;\n    const {\n      t\n    } = useLocale();\n    const nsUpload = useNamespace(\"upload\");\n    const nsIcon = useNamespace(\"icon\");\n    const nsList = useNamespace(\"list\");\n    const focusing = ref(false);\n\n    const handleClick = file => {\n      props.handlePreview(file);\n    };\n\n    const onFileClicked = e => {\n      ;\n      e.target.focus();\n    };\n\n    const handleRemove = file => {\n      emit(\"remove\", file);\n    };\n\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(TransitionGroup, {\n        tag: \"ul\",\n        class: normalizeClass([unref(nsUpload).b(\"list\"), unref(nsUpload).bm(\"list\", _ctx.listType), unref(nsUpload).is(\"disabled\", _ctx.disabled)]),\n        name: unref(nsList).b()\n      }, {\n        default: withCtx(() => [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.files, file => {\n          return openBlock(), createElementBlock(\"li\", {\n            key: file.uid || file.name,\n            class: normalizeClass([unref(nsUpload).be(\"list\", \"item\"), unref(nsUpload).is(file.status), {\n              focusing: focusing.value\n            }]),\n            tabindex: \"0\",\n            onKeydown: withKeys($event => !_ctx.disabled && handleRemove(file), [\"delete\"]),\n            onFocus: _cache[0] || (_cache[0] = $event => focusing.value = true),\n            onBlur: _cache[1] || (_cache[1] = $event => focusing.value = false),\n            onClick: onFileClicked\n          }, [renderSlot(_ctx.$slots, \"default\", {\n            file\n          }, () => [file.status !== \"uploading\" && [\"picture-card\", \"picture\"].includes(_ctx.listType) ? (openBlock(), createElementBlock(\"img\", {\n            key: 0,\n            class: normalizeClass(unref(nsUpload).be(\"list\", \"item-thumbnail\")),\n            src: file.url,\n            alt: \"\"\n          }, null, 10, _hoisted_2)) : createCommentVNode(\"v-if\", true), createElementVNode(\"a\", {\n            class: normalizeClass(unref(nsUpload).be(\"list\", \"item-name\")),\n            onClick: $event => handleClick(file)\n          }, [createVNode(unref(ElIcon), {\n            class: normalizeClass(unref(nsIcon).m(\"document\"))\n          }, {\n            default: withCtx(() => [createVNode(unref(Document))]),\n            _: 1\n          }, 8, [\"class\"]), createTextVNode(\" \" + toDisplayString(file.name), 1)], 10, _hoisted_3), createElementVNode(\"label\", {\n            class: normalizeClass(unref(nsUpload).be(\"list\", \"item-status-label\"))\n          }, [_ctx.listType === \"text\" ? (openBlock(), createBlock(unref(ElIcon), {\n            key: 0,\n            class: normalizeClass([unref(nsIcon).m(\"upload-success\"), unref(nsIcon).m(\"circle-check\")])\n          }, {\n            default: withCtx(() => [createVNode(unref(CircleCheck))]),\n            _: 1\n          }, 8, [\"class\"])) : [\"picture-card\", \"picture\"].includes(_ctx.listType) ? (openBlock(), createBlock(unref(ElIcon), {\n            key: 1,\n            class: normalizeClass([unref(nsIcon).m(\"upload-success\"), unref(nsIcon).m(\"check\")])\n          }, {\n            default: withCtx(() => [createVNode(unref(Check))]),\n            _: 1\n          }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true)], 2), !_ctx.disabled ? (openBlock(), createBlock(unref(ElIcon), {\n            key: 1,\n            class: normalizeClass(unref(nsIcon).m(\"close\")),\n            onClick: $event => handleRemove(file)\n          }, {\n            default: withCtx(() => [createVNode(unref(Close))]),\n            _: 2\n          }, 1032, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true), createCommentVNode(\" Due to close btn only appears when li gets focused disappears after li gets blurred, thus keyboard navigation can never reach close btn\"), createCommentVNode(\" This is a bug which needs to be fixed \"), createCommentVNode(\" TODO: Fix the incorrect navigation interaction \"), !_ctx.disabled ? (openBlock(), createElementBlock(\"i\", {\n            key: 2,\n            class: normalizeClass(unref(nsIcon).m(\"close-tip\"))\n          }, toDisplayString(unref(t)(\"el.upload.deleteTip\")), 3)) : createCommentVNode(\"v-if\", true), file.status === \"uploading\" ? (openBlock(), createBlock(unref(ElProgress), {\n            key: 3,\n            type: _ctx.listType === \"picture-card\" ? \"circle\" : \"line\",\n            \"stroke-width\": _ctx.listType === \"picture-card\" ? 6 : 2,\n            percentage: Number(file.percentage),\n            style: {\n              \"margin-top\": \"0.5rem\"\n            }\n          }, null, 8, [\"type\", \"stroke-width\", \"percentage\"])) : createCommentVNode(\"v-if\", true), _ctx.listType === \"picture-card\" ? (openBlock(), createElementBlock(\"span\", {\n            key: 4,\n            class: normalizeClass(unref(nsUpload).be(\"list\", \"item-actions\"))\n          }, [createElementVNode(\"span\", {\n            class: normalizeClass(unref(nsUpload).be(\"list\", \"item-preview\")),\n            onClick: $event => _ctx.handlePreview(file)\n          }, [createVNode(unref(ElIcon), {\n            class: normalizeClass(unref(nsIcon).m(\"zoom-in\"))\n          }, {\n            default: withCtx(() => [createVNode(unref(ZoomIn))]),\n            _: 1\n          }, 8, [\"class\"])], 10, _hoisted_4), !_ctx.disabled ? (openBlock(), createElementBlock(\"span\", {\n            key: 0,\n            class: normalizeClass(unref(nsUpload).be(\"list\", \"item-delete\")),\n            onClick: $event => handleRemove(file)\n          }, [createVNode(unref(ElIcon), {\n            class: normalizeClass(unref(nsIcon).m(\"delete\"))\n          }, {\n            default: withCtx(() => [createVNode(unref(Delete))]),\n            _: 1\n          }, 8, [\"class\"])], 10, _hoisted_5)) : createCommentVNode(\"v-if\", true)], 2)) : createCommentVNode(\"v-if\", true)])], 42, _hoisted_1);\n        }), 128))]),\n        _: 3\n      }, 8, [\"class\", \"name\"]);\n    };\n  }\n\n});\n\nexport { _sfc_main as default };","map":null,"metadata":{},"sourceType":"module"}