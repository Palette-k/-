{"ast":null,"code":"import { defineComponent, ref, resolveComponent, openBlock, createElementBlock, Fragment, createVNode } from 'vue';\nimport Thumb from './thumb2.mjs';\nimport { barProps } from './bar.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\n\nconst _sfc_main = defineComponent({\n  components: {\n    Thumb\n  },\n  props: barProps,\n\n  setup(props) {\n    const moveX = ref(0);\n    const moveY = ref(0);\n    const GAP = 4;\n\n    const handleScroll = wrap => {\n      if (wrap) {\n        const offsetHeight = wrap.offsetHeight - GAP;\n        const offsetWidth = wrap.offsetWidth - GAP;\n        moveY.value = wrap.scrollTop * 100 / offsetHeight * props.ratioY;\n        moveX.value = wrap.scrollLeft * 100 / offsetWidth * props.ratioX;\n      }\n    };\n\n    return {\n      handleScroll,\n      moveX,\n      moveY\n    };\n  }\n\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_thumb = resolveComponent(\"thumb\");\n\n  return openBlock(), createElementBlock(Fragment, null, [createVNode(_component_thumb, {\n    move: _ctx.moveX,\n    ratio: _ctx.ratioX,\n    size: _ctx.width,\n    always: _ctx.always\n  }, null, 8, [\"move\", \"ratio\", \"size\", \"always\"]), createVNode(_component_thumb, {\n    move: _ctx.moveY,\n    ratio: _ctx.ratioY,\n    size: _ctx.height,\n    vertical: \"\",\n    always: _ctx.always\n  }, null, 8, [\"move\", \"ratio\", \"size\", \"always\"])], 64);\n}\n\nvar Bar = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { Bar as default };","map":null,"metadata":{},"sourceType":"module"}