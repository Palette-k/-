{"ast":null,"code":"import { defineComponent, getCurrentInstance, inject, ref, onMounted, resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, renderSlot, createBlock, withCtx, resolveDynamicComponent, toDisplayString } from 'vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../../tokens/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { breadcrumbItemProps } from './breadcrumb-item.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { elBreadcrumbKey } from '../../../tokens/breadcrumb.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nconst COMPONENT_NAME = \"ElBreadcrumbItem\";\n\nconst _sfc_main = defineComponent({\n  name: COMPONENT_NAME,\n  components: {\n    ElIcon\n  },\n  props: breadcrumbItemProps,\n\n  setup(props) {\n    const instance = getCurrentInstance();\n    const router = instance.appContext.config.globalProperties.$router;\n    const parent = inject(elBreadcrumbKey, void 0);\n    const ns = useNamespace(\"breadcrumb\");\n    const link = ref();\n    onMounted(() => {\n      link.value.setAttribute(\"role\", \"link\");\n      link.value.addEventListener(\"click\", () => {\n        if (!props.to || !router) return;\n        props.replace ? router.replace(props.to) : router.push(props.to);\n      });\n    });\n    return {\n      ns,\n      link,\n      separator: parent == null ? void 0 : parent.separator,\n      separatorIcon: parent == null ? void 0 : parent.separatorIcon\n    };\n  }\n\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_icon = resolveComponent(\"el-icon\");\n\n  return openBlock(), createElementBlock(\"span\", {\n    class: normalizeClass(_ctx.ns.e(\"item\"))\n  }, [createElementVNode(\"span\", {\n    ref: \"link\",\n    class: normalizeClass([_ctx.ns.e(\"inner\"), _ctx.ns.is(\"link\", !!_ctx.to)]),\n    role: \"link\"\n  }, [renderSlot(_ctx.$slots, \"default\")], 2), _ctx.separatorIcon ? (openBlock(), createBlock(_component_el_icon, {\n    key: 0,\n    class: normalizeClass(_ctx.ns.e(\"separator\"))\n  }, {\n    default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.separatorIcon)))]),\n    _: 1\n  }, 8, [\"class\"])) : (openBlock(), createElementBlock(\"span\", {\n    key: 1,\n    class: normalizeClass(_ctx.ns.e(\"separator\")),\n    role: \"presentation\"\n  }, toDisplayString(_ctx.separator), 3))], 2);\n}\n\nvar BreadcrumbItem = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { BreadcrumbItem as default };","map":null,"metadata":{},"sourceType":"module"}